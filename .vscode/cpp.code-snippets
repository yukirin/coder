{
	// Place your coder ワークスペース snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"prime_factor": {
		"prefix": "prime",
		"body": [
			"",
			"vector<ll_ll> prime_factor(ll n) {",
			"\tvector<ll_ll> res;",
			"\tfor (ll i = 2; i * i <= n; i++) {",
			"\t\tif (n % i) continue;",
			"\t\tres.emplace_back(i, 0);",
			"\t\twhile (n % i == 0) {",
			"\t\t\tn /= i;",
			"\t\t\tres.back().second++;",
			"\t\t}",
			"\t}",
			"",
			"\tif (n != 1) res.emplace_back(n, 1);",
			"\treturn res;",
			"}",
			"",
		],
		"description": "素因数分解を行う"
	},
	"divisor": {
		"prefix": "divisor",
		"body": [
			"",
			"vector<ll> divisor(ll n) {",
			"\tvector<ll> ret;",
			"\tfor (ll i = 1; i * i <= n; i++) {",
			"\t\tif (n % i) continue;",
			"\t\tret.push_back(i);",
			"\t\tif (i * i != n) ret.push_back(n / i);",
			"\t}",
			"",
			"\tsort(begin(ret), end(ret));",
			"\treturn ret;",
			"}",
			"",
		],
		"description": "約数列挙"
	},
	"isprime": {
		"prefix": "isprime",
		"body": [
			"",
			"bool is_prime(ll x) {",
			"\tif (x < 2) return false;",
			"\tfor (ll i = 2; i * i <= x; i++) {",
			"\t\tif (x % i == 0) return false;",
			"\t}",
			"",
			"\treturn true;",
			"}",
			"",
		],
		"description": "素数判定"
	}
}